// Generated by view binder compiler. Do not edit!
package org.tensorflow.codelabs.objectdetection.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.tensorflow.codelabs.objectdetection.R;

public final class AboutLayoutBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TextView by;

  @NonNull
  public final ImageView creator;

  @NonNull
  public final ImageView fbGod;

  @NonNull
  public final CardView feedback;

  @NonNull
  public final TextView ilya;

  @NonNull
  public final ImageView imagePizza;

  @NonNull
  public final LinearLayout llCreator;

  @NonNull
  public final TextView michael;

  @NonNull
  public final CardView pumaCat;

  @NonNull
  public final TextView tvFoodCounter;

  private AboutLayoutBinding(@NonNull RelativeLayout rootView, @NonNull TextView by,
      @NonNull ImageView creator, @NonNull ImageView fbGod, @NonNull CardView feedback,
      @NonNull TextView ilya, @NonNull ImageView imagePizza, @NonNull LinearLayout llCreator,
      @NonNull TextView michael, @NonNull CardView pumaCat, @NonNull TextView tvFoodCounter) {
    this.rootView = rootView;
    this.by = by;
    this.creator = creator;
    this.fbGod = fbGod;
    this.feedback = feedback;
    this.ilya = ilya;
    this.imagePizza = imagePizza;
    this.llCreator = llCreator;
    this.michael = michael;
    this.pumaCat = pumaCat;
    this.tvFoodCounter = tvFoodCounter;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static AboutLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static AboutLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.about_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static AboutLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.by;
      TextView by = rootView.findViewById(id);
      if (by == null) {
        break missingId;
      }

      id = R.id.creator;
      ImageView creator = rootView.findViewById(id);
      if (creator == null) {
        break missingId;
      }

      id = R.id.fb_god;
      ImageView fbGod = rootView.findViewById(id);
      if (fbGod == null) {
        break missingId;
      }

      id = R.id.feedback;
      CardView feedback = rootView.findViewById(id);
      if (feedback == null) {
        break missingId;
      }

      id = R.id.ilya;
      TextView ilya = rootView.findViewById(id);
      if (ilya == null) {
        break missingId;
      }

      id = R.id.image_pizza;
      ImageView imagePizza = rootView.findViewById(id);
      if (imagePizza == null) {
        break missingId;
      }

      id = R.id.ll_creator;
      LinearLayout llCreator = rootView.findViewById(id);
      if (llCreator == null) {
        break missingId;
      }

      id = R.id.michael;
      TextView michael = rootView.findViewById(id);
      if (michael == null) {
        break missingId;
      }

      id = R.id.puma_cat;
      CardView pumaCat = rootView.findViewById(id);
      if (pumaCat == null) {
        break missingId;
      }

      id = R.id.tv_food_counter;
      TextView tvFoodCounter = rootView.findViewById(id);
      if (tvFoodCounter == null) {
        break missingId;
      }

      return new AboutLayoutBinding((RelativeLayout) rootView, by, creator, fbGod, feedback, ilya,
          imagePizza, llCreator, michael, pumaCat, tvFoodCounter);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
