// Generated by view binder compiler. Do not edit!
package org.tensorflow.codelabs.objectdetection.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.tensorflow.codelabs.objectdetection.R;

public final class DialogViewBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btOk;

  @NonNull
  public final LinearLayout ll;

  @NonNull
  public final ImageView noConnection;

  private DialogViewBinding(@NonNull ConstraintLayout rootView, @NonNull Button btOk,
      @NonNull LinearLayout ll, @NonNull ImageView noConnection) {
    this.rootView = rootView;
    this.btOk = btOk;
    this.ll = ll;
    this.noConnection = noConnection;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogViewBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogViewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_view, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogViewBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bt_ok;
      Button btOk = rootView.findViewById(id);
      if (btOk == null) {
        break missingId;
      }

      id = R.id.ll;
      LinearLayout ll = rootView.findViewById(id);
      if (ll == null) {
        break missingId;
      }

      id = R.id.no_connection;
      ImageView noConnection = rootView.findViewById(id);
      if (noConnection == null) {
        break missingId;
      }

      return new DialogViewBinding((ConstraintLayout) rootView, btOk, ll, noConnection);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
